"===============================================================================
"           Vim's config by RaiseFree
"                              ------------ 11.25.2015
"===============================================================================

let g:snips_author = 'Michael Song'

" -----------------------------------------------------------------------------
"   判断环境：判断操作系统是否是 Windows 还是 Linux 
" -----------------------------------------------------------------------------
let g:iswindows = 0
let g:islinux = 0
if(has("win32") || has("win64") || has("win95") || has("win16"))
    let g:iswindows = 1
else
    let g:islinux = 1
endif

" -----------------------------------------------------------------------------
"   判断环境：判断是终端还是 Gvim
" -----------------------------------------------------------------------------
if has("gui_running")
    let g:isGUI = 1
else
    let g:isGUI = 0
endif

" -----------------------------------------------------------------------------
"   Vim 基础设定部分
" -----------------------------------------------------------------------------
syntax enable

set smartindent                                       "启用智能对齐方式
set expandtab                                         "将Tab键转换为空格
set tabstop=4                                         "设置Tab键的宽度，可以更改，如：宽度为4
set shiftwidth=4                                      "换行时自动缩进宽度，可更改（宽度同tabstop）
set smarttab                                          "指定按一次backspace就删除shiftwidth宽度
set foldenable                                        "启用折叠
set foldmethod=indent                                 "indent 折叠方式

set number                                            "显示行号
set laststatus=2                                      "启用状态栏信息
set cmdheight=1                                       "设置命令行的高度为2，默认为1
set cursorline                                        "突出显示当前行
set background=dark
colorscheme solarized               "Gvim配色方案
set guifont=Monaco:h14                                "设置字体:字号（字体名称空格用下划线代替）
"set guifont=Source_Code_Pro_Light:h14
set nowrap                                            "设置不自动换行
set shortmess=atI                                     "去掉欢迎界面

" 设置 gVim 窗口初始位置及大小
if g:isGUI
    " au GUIEnter * simalt ~x                           "窗口启动时自动最大化
    winpos 100 10                                     "指定窗口出现的位置，坐标原点在屏幕左上角
    set lines=999 columns=999                          "指定窗口大小，lines为高度，columns为宽度
endif

" 在不使用 MiniBufExplorer 插件时也可用<C-k,j,h,l>切换到上下左右的窗口中去
noremap <c-k> <c-w>k
noremap <c-j> <c-w>j
noremap <c-h> <c-w>h
noremap <c-l> <c-w>l

set encoding=utf-8                                    "设置gvim内部编码，默认不更改
set fileencoding=utf-8                                "设置当前文件编码，可以更改，如：gbk（同cp936）
set fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1     "设置支持打开的文件的编码

" 文件格式，默认 ffs=dos,unix
set fileformat=unix                                   "设置新（当前）文件的<EOL>格式，可以更改，如：dos（windows系统常用）
set fileformats=unix,dos,mac                          "给出文件的<EOL>格式类型

if (g:iswindows && g:isGUI)
    "解决菜单乱码
    source $VIMRUNTIME/delmenu.vim
    source $VIMRUNTIME/menu.vim

    "解决consle输出乱码
    language messages zh_CN.utf-8
endif

" 设定MacVim&&Gvim窗口外观
set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=L
nmap <silent> <c-F11> :if &guioptions =~# 'm' <Bar>
			\set guioptions-=m <Bar>
			\set guioptions-=T <Bar>
			\set guioptions-=r <Bar>
			\set guioptions-=L <Bar>
			\else <Bar>
			\set guioptions+=m <Bar>
			\set guioptions+=T <Bar>
			\set guioptions+=r <Bar>
			\set guioptions+=L <Bar>
			\endif<CR>

" -----------------------------------------------------------------------------
"  Linux Gvim/Vim 默认配置 做了一点修改
" -----------------------------------------------------------------------------
if g:islinux
    set hlsearch        "高亮搜索
    set incsearch       "在输入要搜索的文字时，实时匹配

    " Uncomment the following to have Vim jump to the last position when
    " reopening a file
    if has("autocmd")
        au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
    endif

    if g:isGUI
        " Source a global configuration file if available
        if filereadable("/etc/vim/gvimrc.local")
            source /etc/vim/gvimrc.local
        endif
    else
        " This line should not be removed as it ensures that various options are
        " properly set to work with the Vim-related packages available in Debian.
        runtime! debian.vim

        " Vim5 and later versions support syntax highlighting. Uncommenting the next
        " line enables syntax highlighting by default.
        if has("syntax")
            syntax on
        endif

        set mouse=a                    " 在任何模式下启用鼠标
        set t_Co=256                   " 在终端启用256色
        set backspace=2                " 设置退格键可用

        " Source a global configuration file if available
        if filereadable("/etc/vim/vimrc.local")
            source /etc/vim/vimrc.local
        endif
    endif
endif


" -----------------------------------------------------------------------------
"   插件绑定部分
" -----------------------------------------------------------------------------
set nocompatible              " be iMproved, required
filetype plugin indent off    " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'jiangmiao/auto-pairs'                   "括号自动配对
Plugin 'shawncplus/phpcomplete.vim'             "PHP自动补全代码插件
Plugin 'Align'                                  "自动对齐插件
Plugin 'scrooloose/nerdcommenter'               "注释插件
Plugin 'scrooloose/nerdtree'                    "文件目录树插件
Plugin 'jlanzarotta/bufexplorer'                "编辑器缓存插件
Plugin 'altercation/solarized'                  "最牛逼的配色
Plugin 'garbas/vim-snipmate'                    "自动补全插件
Plugin 'honza/vim-snippets'                     "同上
Plugin 'MarcWeber/vim-addon-mw-utils'           "同上
Plugin 'tomtom/tlib_vim'                        "同上
Plugin 'majutsushi/tagbar'                      "类似于tlist且更直观
Plugin 'kien/ctrlp.vim'                         "大有取代Nerdtree的趋势，非常好用！
Plugin 'StanAngeloff/php.vim'                   "PHP 语法分析插件
Plugin 'joonty/vim-phpqa'                       "PHP 语法检查工具
Plugin 'mattn/emmet-vim'                        "HTML/CSS代码快速编写神器，详细帮助见 :h emmet.txt
Plugin 'Yggdroot/indentLine'                    "代码对齐线
Plugin 'Mark--Karkat'                           "给不同的单词高亮，表明不同的变量时很有用，详细帮助见 :h mark.txt
Plugin 'Lokaltog/vim-powerline'                 "状态栏插件，更好的状态栏效果
Plugin 'tpope/vim-surround'                     "快速给单词/句子两边增加符号（包括html标签），缺点是不能用来重复命令不过 repeat 插件可以解决这个问题，详细帮助见 :h surround.txt
Plugin 'repeat.vim'                             "按 '.' 重复上一个操作
Plugin 'TxtBrowser'                             "用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）
Plugin 'evidens/vim-twig'                       "twig 语法插件
Plugin 'vim-scripts/JavaScript-Indent'          "js 辅助插件
Plugin 'Shougo/neocomplete.vim'                 "关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。 据说更强大更牛逼！~~！！
Plugin 'ervandew/supertab'                      "tab 自定义tab功能

call vundle#end()            " required
filetype plugin indent on    " required
"Plugin 'Shougo/neocomplcache.vim' 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。已经被淘汰了
 
nmap <F8> :TagbarToggle<CR>


"-----------------------------------------------------------------------------
"   jlanzarotta/bufexplorer 插件配置
"   快速浏览和操作Buffer ,主要用于同时打开多个文件并相与切换
"-----------------------------------------------------------------------------
nmap <F1> :BufExplorer<CR>


"-----------------------------------------------------------------------------
"   shawncplus/phpcomplete.vim 插件配置
"-----------------------------------------------------------------------------
let g:phpcomplete_relax_static_constraint = 0
let g:phpcomplete_complete_for_unknown_classes = 0
let g:phpcomplete_search_tags_for_variables = 0
let g:phpcomplete_parse_docblock_comments = 0
let g:phpcomplete_cache_taglists = 0
let g:phpcomplete_enhance_jump_to_definition = 0
"autocmd FileType php set omnifunc=phpcomplete#CompletePHP "phpcomplete
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" -----------------------------------------------------------------------------
"    neocomplcache 插件配置  暂时弃用
" -----------------------------------------------------------------------------
"let g:neocomplcache_enable_at_startup = 1     "vim 启动时启用插件
"let g:neocomplcache_disable_auto_complete = 1 "不自动弹出补全列表

" -----------------------------------------------------------------------------
"    Shougo/neocomplete.vim 插件配置  
" -----------------------------------------------------------------------------
"let g:neocomplete#enable_at_startup = 1

"-----------------------------------------------------------------------------
"   ctags 相关配置
"-----------------------------------------------------------------------------
set tags=./tags;                            "向上级目录递归查找tags文件（好像只有在Windows下才有用）


"-----------------------------------------------------------------------------
"   StanAngeloff/php.vim 相关配置
"-----------------------------------------------------------------------------
function! PhpSyntaxOverride()
  hi! def link phpDocTags  phpDefine
  hi! def link phpDocParam phpType
endfunction

augroup phpSyntaxOverride
  autocmd!
  autocmd FileType php call PhpSyntaxOverride()
augroup END

"-----------------------------------------------------------------------------
"   joonty/vim-phpqa 相关配置
"-----------------------------------------------------------------------------
let g:phpqa_messdetector_autorun = 0
let g:phpqa_codesniffer_autorun = 0
let g:phpqa_codecoverage_autorun = 0

"let g:phpqa_php_cmd='/path/to/php'
"let g:phpqa_messdetector_cmd='/path/to/phpmd'
let g:phpqa_codesniffer_cmd='/usr/local/php5/bin/phpcs'

" -----------------------------------------------------------------------------
"   indentLine 相关配置 
" -----------------------------------------------------------------------------
if g:isGUI
    let g:indentLine_char = "┊"
    let g:indentLine_first_char = "┊"
endif
" nmap <leader>il :IndentLinesToggle<CR>

" -----------------------------------------------------------------------------
"    txtbrowser 插件配置  
" -----------------------------------------------------------------------------
au BufRead,BufNewFile *.txt setlocal ft=txt

" -----------------------------------------------------------------------------
"    ervandew/supertab 插件配置  
" -----------------------------------------------------------------------------
"let g:SuperTabContextDefaultCompletionType = "<c-x><c-o>"
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"

" -----------------------------------------------------------------------------
"   其它配置
" -----------------------------------------------------------------------------
set writebackup                             "保存文件前建立备份，保存成功后删除该备份
set nobackup                                "设置无备份文件

"-----------------------------------------------------------------------------
"   没写好的
"-----------------------------------------------------------------------------
"function CreateTags()
"    echo 'new stat'
"endfunction
"
"autocmd BufWritePost $MYVIMRC source $MYVIMRC
